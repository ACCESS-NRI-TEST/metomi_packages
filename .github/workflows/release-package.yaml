name: Release package
on:
  workflow_dispatch:
    inputs:
      package_name:
        description: 'Name of the package to release'
        type: string
        required: true
      revision:
        description: 'SVN revision associated with the package version to release'
        type: string
        required: true
      version:
        description: 'Version of the package to release'
        type: string
        required: true
run-name: "Release ${{ inputs.package_name }} ${{ inputs.version }}"
env:
    TAG_NAME: ${{ inputs.package_name }}-${{ inputs.version }}
    RELEASE_NAME: ${{ inputs.package_name }} ${{ inputs.version }}

jobs:
  create-conda-package:
    name: Create conda package
    runs-on: ubuntu-latest
    env:
      REVISION: ${{ inputs.revision }} # Needed as an env variable for the conda recipe
      VERSION: ${{ inputs.version }} # Needed as an env variable for the conda recipe
    outputs:
        paths: ${{ steps.conda-build.outputs.paths }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Cache SVN auth for MOSRS
        uses: access-nri/actions/.github/actions/cache-svn-auth@main
        with: 
          username: '${{ secrets.MOSRS_USERNAME }}'
          password: '${{ secrets.MOSRS_PASSWORD }}'
          realm: '<https://code.metoffice.gov.uk:443> Met Office Code'
      
      - name: Set up micromamba
        uses: mamba-org/setup-micromamba@b09ef9b599704322748535812ca03efb2625677b #v2.0.5
        with:
          environment-file: env-build.yml

      - name: Build and upload conda package
        id: conda-build
        uses: ACCESS-NRI/action-build-and-upload-conda-packages@davide/7-enable-multi-outputs
        with:
          meta_yaml_dir: packages/${{ inputs.package_name }}/recipe
          user: ${{ secrets.ANACONDA_USERNAME }}
          token: ${{ secrets.ANACONDA_TOKEN }}
          conda_build_args: -c atteggiani -c accessnri -c conda-forge -c nodefaults
    
  create-release:
    name: Create release
    runs-on: ubuntu-latest
    needs: create-conda-package
    permissions:
      contents: write
    steps:
      - name: Create tag
        id: create-tag
        run: |
          # Create tag
          git tag '${{ env.TAG_NAME }}'
          git push origin tag '${{ env.TAG_NAME }}'

      - name: Create Release
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 #v2.3.2
        with:
          tag_name: '${{ env.TAG_NAME }}'
          name: '${{ env.RELEASE_NAME }}'
          generate_release_notes: false
          fail_on_unmatched_files: true
          files: |-
            ${{ needs.create-conda-package.outputs.paths }}

  cleanup-tag-on-failure:
    name: Cleanup tag
    runs-on: ubuntu-latest
    needs: [create-conda-package, create-release]
    # Run this job if any of the previous jobs failed (and don't skip if any of the needed jobs is skipped)
    if: ${{ ( always() && failure() ) || cancelled() }}
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-tags: true
  
      - name: Delete tag
        run: |
          if git rev-parse '${{ env.TAG_NAME }}' &>/dev/null; then
              git push origin :${{ env.TAG_NAME }}
              echo "A job in the current workflow failed. Tag '${{ env.TAG_NAME }}' was deleted."
          fi
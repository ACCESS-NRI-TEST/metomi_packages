name: Release package
on:
    workflow_dispatch:
        inputs:
            package_name:
                description: 'Name of the package to release'
                type: string
                required: true
            revision:
                description: 'SVN revision associated with the package version to release'
                type: string
                required: true
run-name: "Release ${{ inputs.package_name }}"

jobs:
    find-version:
        name: Find version from revision
        runs-on: ubuntu-latest
        outputs:
            version: ${{ steps.get-version.outputs.version }}
        steps:
          - name: Checkout code
            uses: actions/checkout@v4
        
          # GitHub runners don't support svn anymore, so we have to install it manually. 
          # (https://github.com/actions/runner-images/issues/11219#issuecomment-2550505933)
          - name: Install svn
            run: | 
                sudo apt-get update
                sudo apt-get install -y subversion
                # Check installation
                svn --version
          
          # Set up gpg cache for svn authentication using PRESET_PASSPHRASE
          # (https://www.gnupg.org/documentation/manuals/gnupg/Agent-PRESET_005fPASSPHRASE.html)
          - name: gpg-setup
            run: | 
                # Start a gpg agent
                eval $(gpg-agent --daemon -vs)
                # Set passphrase for the SVN repository
                gpg-connect-agent <<< "PRESET_PASSPHRASE 
                sudo apt-get update
                sudo apt-get install -y subversion
                # Check installation
                svn --version
        
            - name: Get package version
            id: get-version
            run: |
              # Extract the version from the package's meta.yaml file
              VERSION=$(grep 'version:' packages/${{ inputs.package_name }}/meta.yaml | awk '{print $2}')
              TAG_NAME="${{ inputs.package_name }}-${VERSION}"
              echo "version=$VERSION" >> $GITHUB_OUTPUT
              echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT

    create-tag:
        name: Create tag
        runs-on: ubuntu-latest
        permissions:
            contents: write
        steps:
          - name: Checkout code
            uses: actions/checkout@v4
            with:
                fetch-tags: true

          - name: Create tag
            run: |
              # Create tag in the format <package_name>-<version>
              git tag ${{env.TAG_NAME}}
              git push origin tag ${{env.TAG_NAME}}

    create-and-upload-conda-package:
        name: Build with conda and release
        runs-on: ubuntu-latest
        # runs-on: ${{ matrix.os }}
        # strategy:
        #   matrix:
        #     include:
        #       - os: ubuntu-latest #linux64
        #         # conda-platform: linux64
        #       - os: macos-latest #osx64
        #         # conda-platform: osx64
        #       - os: macos-14-arm64 #osx64 and arm64
        #         # conda-platform: osxarm64
        #       - os: windows-latest #win64
        #         # conda-platform: win64
        env:
            VERSION: ${{inputs.version}} # Needed as an env variable for the conda recipe
            REVISION: ${{inputs.revision}} # Needed as an env variable for the conda recipe
            SVN_USERNAME: ${{secrets.MOSRS_USERNAME}} # Needed as an env variable for the conda recipe
            SVN_PASSWORD: ${{secrets.MOSRS_PASSWORD}} # Needed as an env variable for the conda recipe
        permissions:
            contents: write
        steps:
          - name: Checkout source
            uses: actions/checkout@v4
          
          - name: Set up micromamba
            uses: mamba-org/setup-micromamba@b09ef9b599704322748535812ca03efb2625677b #v2.0.5
            with:
                environment-file: env-build.yml

        # GitHub runners don't support svn anymore, so we have to install it manually. 
        # (https://github.com/actions/runner-images/issues/11219#issuecomment-2550505933)
          - name: Install svn
            run: | 
                sudo apt-get update 
                sudo apt-get install -y subversion
                # Check installation
                svn --version

          - name: Build and upload conda package
            id: build-upload
            uses: ACCESS-NRI/action-build-and-upload-conda-packages@davide/7-enable-multi-outputs
            with:
                meta_yaml_dir: packages/${{ inputs.package_name }}
                user: ${{ secrets.ANACONDA_USERNAME }}
                token: ${{ secrets.ANACONDA_TOKEN }}
                conda_build_args: --channel atteggiani --channel accessnri --channel conda-forge --channel nodefaults
                
          - name: Create Release
            uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 #v2.3.2
            with:
                tag_name: ${{env.TAG_NAME}}
                name: ${{inputs.package_name}} ${{inputs.version}}
                generate_release_notes: false
                fail_on_unmatched_files: true
                files: |-
                    ${{steps.build-upload.outputs.paths}}
        
    cleanup-tag-on-failure:
        name: Cleanup tag
        runs-on: ubuntu-latest
        needs: [create-tag, create-and-upload-conda-package]
        # Run this job if any of the previous jobs failed (and don't skip if any of the needed jobs is skipped)
        if: ${{ ( always() && failure() ) || cancelled() }}
        permissions:
            contents: write
        steps:
          - name: Checkout code
            uses: actions/checkout@v4
            with:
                fetch-tags: true

          - name: Delete tag
            run: |
                if git rev-parse '${{ env.TAG_NAME }}' &>/dev/null; then
                    git push origin :${{ env.TAG_NAME }}
                    echo "A job in the current workflow failed. Tag '${{ env.TAG_NAME }}' was deleted."
                fi